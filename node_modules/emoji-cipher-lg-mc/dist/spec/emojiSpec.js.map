{"version":3,"sources":["../../src/spec/emojiSpec.js"],"names":[],"mappings":";;AAAA;;AAEA,IAAM,YAAY,yDAAlB;;AAEA,SAAS,QAAT,EAAmB,YAAW;AAC5B,KAAG,uDAAH,EAA4D,YAAW;AACrE,WAAO,yBAAO,4BAAP,CAAP,EAA6C,OAA7C,CAAqD,SAArD;AACD,GAFD;;AAIA,KAAG,0GAAH,EAA+G,YAAW;AACxH,WAAO,yBAAO,4BAAP,CAAP,EAA6C,OAA7C,CAAqD,SAArD;AACD,GAFD;AAGD,CARD;;AAUA,SAAS,QAAT,EAAmB,YAAW;AAC5B,KAAG,mCAAH,EAAwC,YAAW;AACjD,WAAO,yBAAO,OAAP,CAAP,EAAwB,OAAxB,CAAgC,EAAhC;AACD,GAFD;;AAIA,MAAI,uBAAJ,EAA6B,YAAW;AACtC,WAAO,yBAAO,WAAP,CAAP,EAA4B,OAA5B,CAAoC,IAApC;AACD,GAFD;;AAIA,KAAG,uDAAH,EAA4D,YAAW;AACrE,WAAO,yBAAO,SAAP,CAAP,EAA0B,OAA1B,CAAkC,4BAAlC;AACD,GAFD;AAKD,CAdD","file":"emojiSpec.js","sourcesContent":["import { encode, decode } from '../emoji-cipher'\n\nconst emojiAToZ = '👽🔔☁️💧👂👨‍👩‍👦⛳️❤️🍦🎃🔑🔒💪🎶🌊🌴❓🌹😄👍☔️🎮🍷❌☯💤'\n\ndescribe(\"encode\", function() {\n  it(\"should translate an alpha string into an emoji string\", function() {\n    expect(encode('abcdefghijklmnopqrstuvwxyz')).toEqual(emojiAToZ)\n  })\n\n  it(\"should translate an alpha string with caps into the same emoji string an all lowercase string would have\", function() {\n    expect(encode('ABcdEfghijkLMNopqrstuVWXyz')).toEqual(emojiAToZ)\n  })\n})\n\ndescribe(\"decode\", function() {\n  it(\"should not crash for alpha string\", function() {\n    expect(decode('hello')).toEqual('')\n  })\n\n  xit(\"should work for mixed\", function() {\n    expect(decode('he💧l👂lo')).toEqual('de')\n  })\n\n  it(\"should translate an emoji string into an alpha string\", function() {\n    expect(decode(emojiAToZ)).toEqual('abcdefghijklmnopqrstuvwxyz')\n  })\n\n\n})\n\n// test that encoding then decoding returns the same thing"]}